

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Nov 17 14:21:25 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  007AF3                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _velocidad
    63  007AF3  0001               	dw	1
    64  007AF5  0000               	dw	0
    65                           
    66                           ;initializer for _efecto
    67  007AF7  01                 	db	1
    68  0000                     _PORTBbits	set	3969
    69  0000                     _INTCON2bits	set	4081
    70  0000                     _TRISBbits	set	3987
    71  0000                     _LATD	set	3980
    72  0000                     _TRISD	set	3989
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007AF8                     __pcinit:
    78                           	callstack 0
    79  007AF8                     start_initialization:
    80                           	callstack 0
    81  007AF8                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (5 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  007AF8  0EF3               	movlw	low __pidataCOMRAM
    87  007AFA  6EF6               	movwf	tblptrl,c
    88  007AFC  0E7A               	movlw	high __pidataCOMRAM
    89  007AFE  6EF7               	movwf	tblptrh,c
    90  007B00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91  007B02  6EF8               	movwf	tblptru,c
    92  007B04  EE00  F00F         	lfsr	0,__pdataCOMRAM
    93  007B08  EE10 F005          	lfsr	1,5
    94  007B0C                     copy_data0:
    95  007B0C  0009               	tblrd		*+
    96  007B0E  CFF5 FFEE          	movff	tablat,postinc0
    97  007B12  50E5               	movf	postdec1,w,c
    98  007B14  50E1               	movf	fsr1l,w,c
    99  007B16  E1FA               	bnz	copy_data0
   100  007B18                     end_of_initialization:
   101                           	callstack 0
   102  007B18                     __end_of__initialization:
   103                           	callstack 0
   104  007B18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105  007B1A  6EF8               	movwf	tblptru,c
   106  007B1C  0100               	movlb	0
   107  007B1E  EF63  F03E         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	dataCOMRAM
   110  00000F                     __pdataCOMRAM:
   111                           	callstack 0
   112  00000F                     _velocidad:
   113                           	callstack 0
   114  00000F                     	ds	4
   115  000013                     _efecto:
   116                           	callstack 0
   117  000013                     	ds	1
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	callstack 0
   122  000001                     ??_retardo_velocidad:
   123  000001                     ?_lectura:
   124                           	callstack 0
   125  000001                     
   126                           ; 2 bytes @ 0x0
   127  000001                     	ds	2
   128  000003                     ??_lectura:
   129                           
   130                           ; 1 bytes @ 0x2
   131  000003                     	ds	1
   132  000004                     ??_secuencial_Efecto1:
   133  000004                     ??_secuencial_Efecto2:
   134  000004                     ??_secuencial_Efecto3:
   135  000004                     ??_secuencial_Efecto4:
   136  000004                     ??_secuencial_Efecto5:
   137  000004                     ??_secuencial_Efecto6:
   138                           
   139                           ; 1 bytes @ 0x3
   140  000004                     	ds	2
   141  000006                     secuencial_Efecto1@i:
   142                           	callstack 0
   143  000006                     secuencial_Efecto3@i:
   144                           	callstack 0
   145  000006                     secuencial_Efecto5@i:
   146                           	callstack 0
   147  000006                     secuencial_Efecto6@i:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     secuencial_Efecto4@i:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x6
   156  000007                     	ds	1
   157  000008                     secuencial_Efecto2@j:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x7
   161  000008                     	ds	1
   162  000009                     secuencial_Efecto4@m:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x8
   166  000009                     	ds	1
   167  00000A                     secuencial_Efecto2@i:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x9
   171  00000A                     	ds	1
   172  00000B                     secuencial_Efecto4@n:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0xA
   176  00000B                     	ds	2
   177  00000D                     ??_main:
   178                           
   179                           ; 1 bytes @ 0xC
   180  00000D                     	ds	2
   181                           
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 48 in file "secuencia_main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  2   36[None  ] int 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   201 ;;      Params:         0       0       0       0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0
   203 ;;      Temps:          2       0       0       0       0       0       0       0       0
   204 ;;      Totals:         2       0       0       0       0       0       0       0       0
   205 ;;Total ram usage:        2 bytes
   206 ;; Hardware stack levels required when called:    2
   207 ;; This function calls:
   208 ;;		_secuencial_Efecto1
   209 ;;		_secuencial_Efecto2
   210 ;;		_secuencial_Efecto3
   211 ;;		_secuencial_Efecto4
   212 ;;		_secuencial_Efecto5
   213 ;;		_secuencial_Efecto6
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220  007CC6                     __ptext0:
   221                           	callstack 0
   222  007CC6                     _main:
   223                           	callstack 29
   224  007CC6                     
   225                           ;secuencia_main.c: 49:     TRISD = 0;
   226  007CC6  0E00               	movlw	0
   227  007CC8  6E95               	movwf	149,c	;volatile
   228                           
   229                           ;secuencia_main.c: 50:     LATD = 0;
   230  007CCA  0E00               	movlw	0
   231  007CCC  6E8C               	movwf	140,c	;volatile
   232  007CCE                     
   233                           ;secuencia_main.c: 51:     TRISBbits.TRISB7 = 1;
   234  007CCE  8E93               	bsf	147,7,c	;volatile
   235  007CD0                     
   236                           ;secuencia_main.c: 52:     TRISBbits.TRISB6 = 1;
   237  007CD0  8C93               	bsf	147,6,c	;volatile
   238  007CD2                     
   239                           ;secuencia_main.c: 53:     INTCON2bits.RBPU = 0;
   240  007CD2  9EF1               	bcf	241,7,c	;volatile
   241  007CD4  EF82  F03E         	goto	l1099
   242  007CD8                     l1085:
   243  007CD8  ECC1  F03D         	call	_secuencial_Efecto1	;wreg free
   244                           
   245                           ;secuencia_main.c: 59:                 break;
   246  007CDC  EF82  F03E         	goto	l1099
   247  007CE0                     l1087:
   248  007CE0  ECA9  F03E         	call	_secuencial_Efecto2	;wreg free
   249                           
   250                           ;secuencia_main.c: 61:                 break;
   251  007CE4  EF82  F03E         	goto	l1099
   252  007CE8                     l1089:
   253  007CE8  ECF7  F03D         	call	_secuencial_Efecto3	;wreg free
   254                           
   255                           ;secuencia_main.c: 63:                 break;
   256  007CEC  EF82  F03E         	goto	l1099
   257  007CF0                     l1091:
   258  007CF0  EC3F  F03F         	call	_secuencial_Efecto4	;wreg free
   259                           
   260                           ;secuencia_main.c: 65:                 break;
   261  007CF4  EF82  F03E         	goto	l1099
   262  007CF8                     l1093:
   263  007CF8  EC91  F03D         	call	_secuencial_Efecto5	;wreg free
   264                           
   265                           ;secuencia_main.c: 67:                 break;
   266  007CFC  EF82  F03E         	goto	l1099
   267  007D00                     l1095:
   268  007D00  EC2D  F03E         	call	_secuencial_Efecto6	;wreg free
   269  007D04                     l1099:
   270  007D04  5013               	movf	_efecto^0,w,c
   271  007D06  6E0D               	movwf	??_main^0,c
   272  007D08  6A0E               	clrf	(??_main+1)^0,c
   273                           
   274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   275                           ; Switch size 1, requested type "simple"
   276                           ; Number of cases is 1, Range of values is 0 to 0
   277                           ; switch strategies available:
   278                           ; Name         Instructions Cycles
   279                           ; simple_byte            4     3 (average)
   280                           ;	Chosen strategy is simple_byte
   281  007D0A  500E               	movf	(??_main+1)^0,w,c
   282  007D0C  0A00               	xorlw	0	; case 0
   283  007D0E  B4D8               	btfsc	status,2,c
   284  007D10  EF8C  F03E         	goto	l1109
   285  007D14  EF82  F03E         	goto	l1099
   286  007D18                     l1109:
   287                           
   288                           ; Switch size 1, requested type "simple"
   289                           ; Number of cases is 6, Range of values is 1 to 6
   290                           ; switch strategies available:
   291                           ; Name         Instructions Cycles
   292                           ; simple_byte           19    10 (average)
   293                           ;	Chosen strategy is simple_byte
   294  007D18  500D               	movf	??_main^0,w,c
   295  007D1A  0A01               	xorlw	1	; case 1
   296  007D1C  B4D8               	btfsc	status,2,c
   297  007D1E  EF6C  F03E         	goto	l1085
   298  007D22  0A03               	xorlw	3	; case 2
   299  007D24  B4D8               	btfsc	status,2,c
   300  007D26  EF70  F03E         	goto	l1087
   301  007D2A  0A01               	xorlw	1	; case 3
   302  007D2C  B4D8               	btfsc	status,2,c
   303  007D2E  EF74  F03E         	goto	l1089
   304  007D32  0A07               	xorlw	7	; case 4
   305  007D34  B4D8               	btfsc	status,2,c
   306  007D36  EF78  F03E         	goto	l1091
   307  007D3A  0A01               	xorlw	1	; case 5
   308  007D3C  B4D8               	btfsc	status,2,c
   309  007D3E  EF7C  F03E         	goto	l1093
   310  007D42  0A03               	xorlw	3	; case 6
   311  007D44  B4D8               	btfsc	status,2,c
   312  007D46  EF80  F03E         	goto	l1095
   313  007D4A  EF82  F03E         	goto	l1099
   314  007D4E  EF00  F000         	goto	start
   315  007D52                     __end_of_main:
   316                           	callstack 0
   317                           
   318 ;; *************** function _secuencial_Efecto6 *****************
   319 ;; Defined at:
   320 ;;		line 118 in file "secuencia_main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  i               2    5[COMRAM] int 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   334 ;;      Params:         0       0       0       0       0       0       0       0       0
   335 ;;      Locals:         2       0       0       0       0       0       0       0       0
   336 ;;      Temps:          2       0       0       0       0       0       0       0       0
   337 ;;      Totals:         4       0       0       0       0       0       0       0       0
   338 ;;Total ram usage:        4 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    1
   341 ;; This function calls:
   342 ;;		_lectura
   343 ;;		_retardo_velocidad
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350  007C5A                     __ptext1:
   351                           	callstack 0
   352  007C5A                     _secuencial_Efecto6:
   353                           	callstack 29
   354  007C5A                     
   355                           ;secuencia_main.c: 119:     for (int i = 0; i < 7; i++) {
   356  007C5A  0E00               	movlw	0
   357  007C5C  6E07               	movwf	(secuencial_Efecto6@i+1)^0,c
   358  007C5E  0E00               	movlw	0
   359  007C60  6E06               	movwf	secuencial_Efecto6@i^0,c
   360  007C62                     l1061:
   361  007C62  BE07               	btfsc	(secuencial_Efecto6@i+1)^0,7,c
   362  007C64  EF3D  F03E         	goto	u501
   363  007C68  5007               	movf	(secuencial_Efecto6@i+1)^0,w,c
   364  007C6A  E109               	bnz	u500
   365  007C6C  0E07               	movlw	7
   366  007C6E  5C06               	subwf	secuencial_Efecto6@i^0,w,c
   367  007C70  A0D8               	btfss	status,0,c
   368  007C72  EF3D  F03E         	goto	u501
   369  007C76  EF3F  F03E         	goto	u500
   370  007C7A                     u501:
   371  007C7A  EF41  F03E         	goto	l1065
   372  007C7E                     u500:
   373  007C7E  EF62  F03E         	goto	l84
   374  007C82                     l1065:
   375                           
   376                           ;secuencia_main.c: 120:         LATD = 3 << i;
   377  007C82  C006  F004         	movff	secuencial_Efecto6@i,??_secuencial_Efecto6
   378  007C86  0E03               	movlw	3
   379  007C88  6E05               	movwf	(??_secuencial_Efecto6+1)^0,c
   380  007C8A  2A04               	incf	??_secuencial_Efecto6^0,f,c
   381  007C8C  EF4A  F03E         	goto	u514
   382  007C90                     u515:
   383  007C90  90D8               	bcf	status,0,c
   384  007C92  3605               	rlcf	(??_secuencial_Efecto6+1)^0,f,c
   385  007C94                     u514:
   386  007C94  2E04               	decfsz	??_secuencial_Efecto6^0,f,c
   387  007C96  EF48  F03E         	goto	u515
   388  007C9A  5005               	movf	(??_secuencial_Efecto6+1)^0,w,c
   389  007C9C  6E8C               	movwf	140,c	;volatile
   390  007C9E                     
   391                           ;secuencia_main.c: 121:         retardo_velocidad();
   392  007C9E  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   393  007CA2                     
   394                           ;secuencia_main.c: 122:         if (lectura()){break;};
   395  007CA2  ECF3  F03E         	call	_lectura	;wreg free
   396  007CA6  5001               	movf	?_lectura^0,w,c
   397  007CA8  1002               	iorwf	(?_lectura+1)^0,w,c
   398  007CAA  B4D8               	btfsc	status,2,c
   399  007CAC  EF5A  F03E         	goto	u521
   400  007CB0  EF5C  F03E         	goto	u520
   401  007CB4                     u521:
   402  007CB4  EF5E  F03E         	goto	l1073
   403  007CB8                     u520:
   404  007CB8  EF62  F03E         	goto	l84
   405  007CBC                     l1073:
   406                           
   407                           ;secuencia_main.c: 123:     }
   408  007CBC  4A06               	infsnz	secuencial_Efecto6@i^0,f,c
   409  007CBE  2A07               	incf	(secuencial_Efecto6@i+1)^0,f,c
   410  007CC0  EF31  F03E         	goto	l1061
   411  007CC4                     l84:
   412  007CC4  0012               	return		;funcret
   413  007CC6                     __end_of_secuencial_Efecto6:
   414                           	callstack 0
   415                           
   416 ;; *************** function _secuencial_Efecto5 *****************
   417 ;; Defined at:
   418 ;;		line 110 in file "secuencia_main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  i               2    5[COMRAM] int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   432 ;;      Params:         0       0       0       0       0       0       0       0       0
   433 ;;      Locals:         2       0       0       0       0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0       0       0       0       0
   435 ;;      Totals:         4       0       0       0       0       0       0       0       0
   436 ;;Total ram usage:        4 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    1
   439 ;; This function calls:
   440 ;;		_lectura
   441 ;;		_retardo_velocidad
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text2
   448  007B22                     __ptext2:
   449                           	callstack 0
   450  007B22                     _secuencial_Efecto5:
   451                           	callstack 29
   452  007B22                     
   453                           ;secuencia_main.c: 111:     for (int i = 8; i >= 0; i--) {
   454  007B22  0E00               	movlw	0
   455  007B24  6E07               	movwf	(secuencial_Efecto5@i+1)^0,c
   456  007B26  0E08               	movlw	8
   457  007B28  6E06               	movwf	secuencial_Efecto5@i^0,c
   458  007B2A                     l1043:
   459  007B2A  BE07               	btfsc	(secuencial_Efecto5@i+1)^0,7,c
   460  007B2C  EF9C  F03D         	goto	u470
   461  007B30  EF9A  F03D         	goto	u471
   462  007B34                     u471:
   463  007B34  EF9E  F03D         	goto	l1047
   464  007B38                     u470:
   465  007B38  EFC0  F03D         	goto	l78
   466  007B3C                     l1047:
   467                           
   468                           ;secuencia_main.c: 112:         LATD = 1 << i;
   469  007B3C  C006  F004         	movff	secuencial_Efecto5@i,??_secuencial_Efecto5
   470  007B40  0E01               	movlw	1
   471  007B42  6E05               	movwf	(??_secuencial_Efecto5+1)^0,c
   472  007B44  2A04               	incf	??_secuencial_Efecto5^0,f,c
   473  007B46  EFA7  F03D         	goto	u484
   474  007B4A                     u485:
   475  007B4A  90D8               	bcf	status,0,c
   476  007B4C  3605               	rlcf	(??_secuencial_Efecto5+1)^0,f,c
   477  007B4E                     u484:
   478  007B4E  2E04               	decfsz	??_secuencial_Efecto5^0,f,c
   479  007B50  EFA5  F03D         	goto	u485
   480  007B54  5005               	movf	(??_secuencial_Efecto5+1)^0,w,c
   481  007B56  6E8C               	movwf	140,c	;volatile
   482  007B58                     
   483                           ;secuencia_main.c: 113:         retardo_velocidad();
   484  007B58  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   485  007B5C                     
   486                           ;secuencia_main.c: 114:         if (lectura()){break;};
   487  007B5C  ECF3  F03E         	call	_lectura	;wreg free
   488  007B60  5001               	movf	?_lectura^0,w,c
   489  007B62  1002               	iorwf	(?_lectura+1)^0,w,c
   490  007B64  B4D8               	btfsc	status,2,c
   491  007B66  EFB7  F03D         	goto	u491
   492  007B6A  EFB9  F03D         	goto	u490
   493  007B6E                     u491:
   494  007B6E  EFBB  F03D         	goto	l1055
   495  007B72                     u490:
   496  007B72  EFC0  F03D         	goto	l78
   497  007B76                     l1055:
   498                           
   499                           ;secuencia_main.c: 115:     }
   500  007B76  0606               	decf	secuencial_Efecto5@i^0,f,c
   501  007B78  A0D8               	btfss	status,0,c
   502  007B7A  0607               	decf	(secuencial_Efecto5@i+1)^0,f,c
   503  007B7C  EF95  F03D         	goto	l1043
   504  007B80                     l78:
   505  007B80  0012               	return		;funcret
   506  007B82                     __end_of_secuencial_Efecto5:
   507                           	callstack 0
   508                           
   509 ;; *************** function _secuencial_Efecto4 *****************
   510 ;; Defined at:
   511 ;;		line 99 in file "secuencia_main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  i               2    6[COMRAM] int 
   516 ;;  n               2   10[COMRAM] volatile unsigned int 
   517 ;;  m               2    8[COMRAM] volatile unsigned int 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   527 ;;      Params:         0       0       0       0       0       0       0       0       0
   528 ;;      Locals:         6       0       0       0       0       0       0       0       0
   529 ;;      Temps:          3       0       0       0       0       0       0       0       0
   530 ;;      Totals:         9       0       0       0       0       0       0       0       0
   531 ;;Total ram usage:        9 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    1
   534 ;; This function calls:
   535 ;;		_lectura
   536 ;;		_retardo_velocidad
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text3
   543  007E7E                     __ptext3:
   544                           	callstack 0
   545  007E7E                     _secuencial_Efecto4:
   546                           	callstack 29
   547  007E7E                     
   548                           ;secuencia_main.c: 100:     volatile unsigned int m=0,n=0;
   549  007E7E  0E00               	movlw	0
   550  007E80  6E0A               	movwf	(secuencial_Efecto4@m+1)^0,c	;volatile
   551  007E82  0E00               	movlw	0
   552  007E84  6E09               	movwf	secuencial_Efecto4@m^0,c	;volatile
   553  007E86  0E00               	movlw	0
   554  007E88  6E0C               	movwf	(secuencial_Efecto4@n+1)^0,c	;volatile
   555  007E8A  0E00               	movlw	0
   556  007E8C  6E0B               	movwf	secuencial_Efecto4@n^0,c	;volatile
   557                           
   558                           ;secuencia_main.c: 101:     for (int i = 0; i < 5; i++) {
   559  007E8E  0E00               	movlw	0
   560  007E90  6E08               	movwf	(secuencial_Efecto4@i+1)^0,c
   561  007E92  0E00               	movlw	0
   562  007E94  6E07               	movwf	secuencial_Efecto4@i^0,c
   563  007E96                     l1029:
   564                           
   565                           ;secuencia_main.c: 102:         LATD = m+n;
   566  007E96  5009               	movf	secuencial_Efecto4@m^0,w,c	;volatile
   567  007E98  240B               	addwf	secuencial_Efecto4@n^0,w,c	;volatile
   568  007E9A  6E8C               	movwf	140,c	;volatile
   569                           
   570                           ;secuencia_main.c: 103:         m += (1 << i) & 0x0f;
   571  007E9C  C007  F004         	movff	secuencial_Efecto4@i,??_secuencial_Efecto4
   572  007EA0  0E01               	movlw	1
   573  007EA2  6E05               	movwf	(??_secuencial_Efecto4+1)^0,c
   574  007EA4  0E00               	movlw	0
   575  007EA6  6E06               	movwf	(??_secuencial_Efecto4+2)^0,c
   576  007EA8  2A04               	incf	??_secuencial_Efecto4^0,f,c
   577  007EAA  EF5A  F03F         	goto	u434
   578  007EAE                     u435:
   579  007EAE  90D8               	bcf	status,0,c
   580  007EB0  3605               	rlcf	(??_secuencial_Efecto4+1)^0,f,c
   581  007EB2  3606               	rlcf	(??_secuencial_Efecto4+2)^0,f,c
   582  007EB4                     u434:
   583  007EB4  2E04               	decfsz	??_secuencial_Efecto4^0,f,c
   584  007EB6  EF57  F03F         	goto	u435
   585  007EBA  0E0F               	movlw	15
   586  007EBC  1605               	andwf	(??_secuencial_Efecto4+1)^0,f,c
   587  007EBE  0E00               	movlw	0
   588  007EC0  1606               	andwf	(??_secuencial_Efecto4+2)^0,f,c
   589  007EC2  5005               	movf	(??_secuencial_Efecto4+1)^0,w,c
   590  007EC4  2609               	addwf	secuencial_Efecto4@m^0,f,c	;volatile
   591  007EC6  5006               	movf	(??_secuencial_Efecto4+2)^0,w,c
   592  007EC8  220A               	addwfc	(secuencial_Efecto4@m+1)^0,f,c	;volatile
   593                           
   594                           ;secuencia_main.c: 104:         n += (1 << (7-i)) & 0xf0;
   595  007ECA  5007               	movf	secuencial_Efecto4@i^0,w,c
   596  007ECC  0807               	sublw	7
   597  007ECE  6E04               	movwf	??_secuencial_Efecto4^0,c
   598  007ED0  0E01               	movlw	1
   599  007ED2  6E05               	movwf	(??_secuencial_Efecto4+1)^0,c
   600  007ED4  0E00               	movlw	0
   601  007ED6  6E06               	movwf	(??_secuencial_Efecto4+2)^0,c
   602  007ED8  2A04               	incf	??_secuencial_Efecto4^0,f,c
   603  007EDA  EF72  F03F         	goto	u444
   604  007EDE                     u445:
   605  007EDE  90D8               	bcf	status,0,c
   606  007EE0  3605               	rlcf	(??_secuencial_Efecto4+1)^0,f,c
   607  007EE2  3606               	rlcf	(??_secuencial_Efecto4+2)^0,f,c
   608  007EE4                     u444:
   609  007EE4  2E04               	decfsz	??_secuencial_Efecto4^0,f,c
   610  007EE6  EF6F  F03F         	goto	u445
   611  007EEA  0EF0               	movlw	240
   612  007EEC  1605               	andwf	(??_secuencial_Efecto4+1)^0,f,c
   613  007EEE  0E00               	movlw	0
   614  007EF0  1606               	andwf	(??_secuencial_Efecto4+2)^0,f,c
   615  007EF2  5005               	movf	(??_secuencial_Efecto4+1)^0,w,c
   616  007EF4  260B               	addwf	secuencial_Efecto4@n^0,f,c	;volatile
   617  007EF6  5006               	movf	(??_secuencial_Efecto4+2)^0,w,c
   618  007EF8  220C               	addwfc	(secuencial_Efecto4@n+1)^0,f,c	;volatile
   619  007EFA                     
   620                           ;secuencia_main.c: 105:         retardo_velocidad();
   621  007EFA  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   622  007EFE                     
   623                           ;secuencia_main.c: 106:         if (lectura()){break;};
   624  007EFE  ECF3  F03E         	call	_lectura	;wreg free
   625  007F02  5001               	movf	?_lectura^0,w,c
   626  007F04  1002               	iorwf	(?_lectura+1)^0,w,c
   627  007F06  B4D8               	btfsc	status,2,c
   628  007F08  EF88  F03F         	goto	u451
   629  007F0C  EF8A  F03F         	goto	u450
   630  007F10                     u451:
   631  007F10  EF8C  F03F         	goto	l1037
   632  007F14                     u450:
   633  007F14  EF9C  F03F         	goto	l72
   634  007F18                     l1037:
   635                           
   636                           ;secuencia_main.c: 107:     }
   637  007F18  4A07               	infsnz	secuencial_Efecto4@i^0,f,c
   638  007F1A  2A08               	incf	(secuencial_Efecto4@i+1)^0,f,c
   639  007F1C  BE08               	btfsc	(secuencial_Efecto4@i+1)^0,7,c
   640  007F1E  EF9A  F03F         	goto	u461
   641  007F22  5008               	movf	(secuencial_Efecto4@i+1)^0,w,c
   642  007F24  E109               	bnz	u460
   643  007F26  0E05               	movlw	5
   644  007F28  5C07               	subwf	secuencial_Efecto4@i^0,w,c
   645  007F2A  A0D8               	btfss	status,0,c
   646  007F2C  EF9A  F03F         	goto	u461
   647  007F30  EF9C  F03F         	goto	u460
   648  007F34                     u461:
   649  007F34  EF4B  F03F         	goto	l1029
   650  007F38                     u460:
   651  007F38                     l72:
   652  007F38  0012               	return		;funcret
   653  007F3A                     __end_of_secuencial_Efecto4:
   654                           	callstack 0
   655                           
   656 ;; *************** function _secuencial_Efecto3 *****************
   657 ;; Defined at:
   658 ;;		line 91 in file "secuencia_main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  i               2    5[COMRAM] int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         0       0       0       0       0       0       0       0       0
   673 ;;      Locals:         2       0       0       0       0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0       0       0
   675 ;;      Totals:         4       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        4 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    1
   679 ;; This function calls:
   680 ;;		_lectura
   681 ;;		_retardo_velocidad
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text4
   688  007BEE                     __ptext4:
   689                           	callstack 0
   690  007BEE                     _secuencial_Efecto3:
   691                           	callstack 29
   692  007BEE                     
   693                           ;secuencia_main.c: 92:     for (int i = 0; i < 9; i++) {
   694  007BEE  0E00               	movlw	0
   695  007BF0  6E07               	movwf	(secuencial_Efecto3@i+1)^0,c
   696  007BF2  0E00               	movlw	0
   697  007BF4  6E06               	movwf	secuencial_Efecto3@i^0,c
   698  007BF6                     l1007:
   699  007BF6  BE07               	btfsc	(secuencial_Efecto3@i+1)^0,7,c
   700  007BF8  EF07  F03E         	goto	u401
   701  007BFC  5007               	movf	(secuencial_Efecto3@i+1)^0,w,c
   702  007BFE  E109               	bnz	u400
   703  007C00  0E09               	movlw	9
   704  007C02  5C06               	subwf	secuencial_Efecto3@i^0,w,c
   705  007C04  A0D8               	btfss	status,0,c
   706  007C06  EF07  F03E         	goto	u401
   707  007C0A  EF09  F03E         	goto	u400
   708  007C0E                     u401:
   709  007C0E  EF0B  F03E         	goto	l1011
   710  007C12                     u400:
   711  007C12  EF2C  F03E         	goto	l66
   712  007C16                     l1011:
   713                           
   714                           ;secuencia_main.c: 93:         LATD = (1 << i) - 1;
   715  007C16  C006  F004         	movff	secuencial_Efecto3@i,??_secuencial_Efecto3
   716  007C1A  0E01               	movlw	1
   717  007C1C  6E05               	movwf	(??_secuencial_Efecto3+1)^0,c
   718  007C1E  2A04               	incf	??_secuencial_Efecto3^0,f,c
   719  007C20  EF14  F03E         	goto	u414
   720  007C24                     u415:
   721  007C24  90D8               	bcf	status,0,c
   722  007C26  3605               	rlcf	(??_secuencial_Efecto3+1)^0,f,c
   723  007C28                     u414:
   724  007C28  2E04               	decfsz	??_secuencial_Efecto3^0,f,c
   725  007C2A  EF12  F03E         	goto	u415
   726  007C2E  0405               	decf	(??_secuencial_Efecto3+1)^0,w,c
   727  007C30  6E8C               	movwf	140,c	;volatile
   728  007C32                     
   729                           ;secuencia_main.c: 94:         retardo_velocidad();
   730  007C32  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   731  007C36                     
   732                           ;secuencia_main.c: 95:         if (lectura()){break;};
   733  007C36  ECF3  F03E         	call	_lectura	;wreg free
   734  007C3A  5001               	movf	?_lectura^0,w,c
   735  007C3C  1002               	iorwf	(?_lectura+1)^0,w,c
   736  007C3E  B4D8               	btfsc	status,2,c
   737  007C40  EF24  F03E         	goto	u421
   738  007C44  EF26  F03E         	goto	u420
   739  007C48                     u421:
   740  007C48  EF28  F03E         	goto	l1019
   741  007C4C                     u420:
   742  007C4C  EF2C  F03E         	goto	l66
   743  007C50                     l1019:
   744                           
   745                           ;secuencia_main.c: 96:     }
   746  007C50  4A06               	infsnz	secuencial_Efecto3@i^0,f,c
   747  007C52  2A07               	incf	(secuencial_Efecto3@i+1)^0,f,c
   748  007C54  EFFB  F03D         	goto	l1007
   749  007C58                     l66:
   750  007C58  0012               	return		;funcret
   751  007C5A                     __end_of_secuencial_Efecto3:
   752                           	callstack 0
   753                           
   754 ;; *************** function _secuencial_Efecto2 *****************
   755 ;; Defined at:
   756 ;;		line 83 in file "secuencia_main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  i               2    9[COMRAM] int 
   761 ;;  j               2    7[COMRAM] int 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   771 ;;      Params:         0       0       0       0       0       0       0       0       0
   772 ;;      Locals:         4       0       0       0       0       0       0       0       0
   773 ;;      Temps:          4       0       0       0       0       0       0       0       0
   774 ;;      Totals:         8       0       0       0       0       0       0       0       0
   775 ;;Total ram usage:        8 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		_lectura
   780 ;;		_retardo_velocidad
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text5
   787  007D52                     __ptext5:
   788                           	callstack 0
   789  007D52                     _secuencial_Efecto2:
   790                           	callstack 29
   791  007D52                     
   792                           ;secuencia_main.c: 84:     for (int i = 0, j = 7; i < 8; i++, j--) {
   793  007D52  0E00               	movlw	0
   794  007D54  6E0B               	movwf	(secuencial_Efecto2@i+1)^0,c
   795  007D56  0E00               	movlw	0
   796  007D58  6E0A               	movwf	secuencial_Efecto2@i^0,c
   797  007D5A  0E00               	movlw	0
   798  007D5C  6E09               	movwf	(secuencial_Efecto2@j+1)^0,c
   799  007D5E  0E07               	movlw	7
   800  007D60  6E08               	movwf	secuencial_Efecto2@j^0,c
   801  007D62                     l989:
   802  007D62  BE0B               	btfsc	(secuencial_Efecto2@i+1)^0,7,c
   803  007D64  EFBD  F03E         	goto	u361
   804  007D68  500B               	movf	(secuencial_Efecto2@i+1)^0,w,c
   805  007D6A  E109               	bnz	u360
   806  007D6C  0E08               	movlw	8
   807  007D6E  5C0A               	subwf	secuencial_Efecto2@i^0,w,c
   808  007D70  A0D8               	btfss	status,0,c
   809  007D72  EFBD  F03E         	goto	u361
   810  007D76  EFBF  F03E         	goto	u360
   811  007D7A                     u361:
   812  007D7A  EFC1  F03E         	goto	l993
   813  007D7E                     u360:
   814  007D7E  EFF2  F03E         	goto	l60
   815  007D82                     l993:
   816                           
   817                           ;secuencia_main.c: 85:         LATD = (1 << i) + (1 << j);
   818  007D82  C008  F004         	movff	secuencial_Efecto2@j,??_secuencial_Efecto2
   819  007D86  0E01               	movlw	1
   820  007D88  6E05               	movwf	(??_secuencial_Efecto2+1)^0,c
   821  007D8A  2A04               	incf	??_secuencial_Efecto2^0,f,c
   822  007D8C  EFCA  F03E         	goto	u374
   823  007D90                     u375:
   824  007D90  90D8               	bcf	status,0,c
   825  007D92  3605               	rlcf	(??_secuencial_Efecto2+1)^0,f,c
   826  007D94                     u374:
   827  007D94  2E04               	decfsz	??_secuencial_Efecto2^0,f,c
   828  007D96  EFC8  F03E         	goto	u375
   829  007D9A  C00A  F006         	movff	secuencial_Efecto2@i,??_secuencial_Efecto2+2
   830  007D9E  0E01               	movlw	1
   831  007DA0  6E07               	movwf	(??_secuencial_Efecto2+3)^0,c
   832  007DA2  2A06               	incf	(??_secuencial_Efecto2+2)^0,f,c
   833  007DA4  EFD6  F03E         	goto	u384
   834  007DA8                     u385:
   835  007DA8  90D8               	bcf	status,0,c
   836  007DAA  3607               	rlcf	(??_secuencial_Efecto2+3)^0,f,c
   837  007DAC                     u384:
   838  007DAC  2E06               	decfsz	(??_secuencial_Efecto2+2)^0,f,c
   839  007DAE  EFD4  F03E         	goto	u385
   840  007DB2  5007               	movf	(??_secuencial_Efecto2+3)^0,w,c
   841  007DB4  2405               	addwf	(??_secuencial_Efecto2+1)^0,w,c
   842  007DB6  6E8C               	movwf	140,c	;volatile
   843  007DB8                     
   844                           ;secuencia_main.c: 86:         retardo_velocidad();
   845  007DB8  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   846  007DBC                     
   847                           ;secuencia_main.c: 87:         if (lectura()){break;};
   848  007DBC  ECF3  F03E         	call	_lectura	;wreg free
   849  007DC0  5001               	movf	?_lectura^0,w,c
   850  007DC2  1002               	iorwf	(?_lectura+1)^0,w,c
   851  007DC4  B4D8               	btfsc	status,2,c
   852  007DC6  EFE7  F03E         	goto	u391
   853  007DCA  EFE9  F03E         	goto	u390
   854  007DCE                     u391:
   855  007DCE  EFEB  F03E         	goto	l1001
   856  007DD2                     u390:
   857  007DD2  EFF2  F03E         	goto	l60
   858  007DD6                     l1001:
   859                           
   860                           ;secuencia_main.c: 88:     }
   861  007DD6  4A0A               	infsnz	secuencial_Efecto2@i^0,f,c
   862  007DD8  2A0B               	incf	(secuencial_Efecto2@i+1)^0,f,c
   863  007DDA  0608               	decf	secuencial_Efecto2@j^0,f,c
   864  007DDC  A0D8               	btfss	status,0,c
   865  007DDE  0609               	decf	(secuencial_Efecto2@j+1)^0,f,c
   866  007DE0  EFB1  F03E         	goto	l989
   867  007DE4                     l60:
   868  007DE4  0012               	return		;funcret
   869  007DE6                     __end_of_secuencial_Efecto2:
   870                           	callstack 0
   871                           
   872 ;; *************** function _secuencial_Efecto1 *****************
   873 ;; Defined at:
   874 ;;		line 75 in file "secuencia_main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  i               2    5[COMRAM] int 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   888 ;;      Params:         0       0       0       0       0       0       0       0       0
   889 ;;      Locals:         2       0       0       0       0       0       0       0       0
   890 ;;      Temps:          2       0       0       0       0       0       0       0       0
   891 ;;      Totals:         4       0       0       0       0       0       0       0       0
   892 ;;Total ram usage:        4 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		_lectura
   897 ;;		_retardo_velocidad
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text6
   904  007B82                     __ptext6:
   905                           	callstack 0
   906  007B82                     _secuencial_Efecto1:
   907                           	callstack 29
   908  007B82                     
   909                           ;secuencia_main.c: 76:     for (int i = 0; i < 8; i++) {
   910  007B82  0E00               	movlw	0
   911  007B84  6E07               	movwf	(secuencial_Efecto1@i+1)^0,c
   912  007B86  0E00               	movlw	0
   913  007B88  6E06               	movwf	secuencial_Efecto1@i^0,c
   914  007B8A                     l971:
   915  007B8A  BE07               	btfsc	(secuencial_Efecto1@i+1)^0,7,c
   916  007B8C  EFD1  F03D         	goto	u331
   917  007B90  5007               	movf	(secuencial_Efecto1@i+1)^0,w,c
   918  007B92  E109               	bnz	u330
   919  007B94  0E08               	movlw	8
   920  007B96  5C06               	subwf	secuencial_Efecto1@i^0,w,c
   921  007B98  A0D8               	btfss	status,0,c
   922  007B9A  EFD1  F03D         	goto	u331
   923  007B9E  EFD3  F03D         	goto	u330
   924  007BA2                     u331:
   925  007BA2  EFD5  F03D         	goto	l975
   926  007BA6                     u330:
   927  007BA6  EFF6  F03D         	goto	l54
   928  007BAA                     l975:
   929                           
   930                           ;secuencia_main.c: 77:         LATD = 1 << i;
   931  007BAA  C006  F004         	movff	secuencial_Efecto1@i,??_secuencial_Efecto1
   932  007BAE  0E01               	movlw	1
   933  007BB0  6E05               	movwf	(??_secuencial_Efecto1+1)^0,c
   934  007BB2  2A04               	incf	??_secuencial_Efecto1^0,f,c
   935  007BB4  EFDE  F03D         	goto	u344
   936  007BB8                     u345:
   937  007BB8  90D8               	bcf	status,0,c
   938  007BBA  3605               	rlcf	(??_secuencial_Efecto1+1)^0,f,c
   939  007BBC                     u344:
   940  007BBC  2E04               	decfsz	??_secuencial_Efecto1^0,f,c
   941  007BBE  EFDC  F03D         	goto	u345
   942  007BC2  5005               	movf	(??_secuencial_Efecto1+1)^0,w,c
   943  007BC4  6E8C               	movwf	140,c	;volatile
   944  007BC6                     
   945                           ;secuencia_main.c: 78:         retardo_velocidad();
   946  007BC6  EC9D  F03F         	call	_retardo_velocidad	;wreg free
   947  007BCA                     
   948                           ;secuencia_main.c: 79:         if (lectura()){break;};
   949  007BCA  ECF3  F03E         	call	_lectura	;wreg free
   950  007BCE  5001               	movf	?_lectura^0,w,c
   951  007BD0  1002               	iorwf	(?_lectura+1)^0,w,c
   952  007BD2  B4D8               	btfsc	status,2,c
   953  007BD4  EFEE  F03D         	goto	u351
   954  007BD8  EFF0  F03D         	goto	u350
   955  007BDC                     u351:
   956  007BDC  EFF2  F03D         	goto	l983
   957  007BE0                     u350:
   958  007BE0  EFF6  F03D         	goto	l54
   959  007BE4                     l983:
   960                           
   961                           ;secuencia_main.c: 80:     }
   962  007BE4  4A06               	infsnz	secuencial_Efecto1@i^0,f,c
   963  007BE6  2A07               	incf	(secuencial_Efecto1@i+1)^0,f,c
   964  007BE8  EFC5  F03D         	goto	l971
   965  007BEC                     l54:
   966  007BEC  0012               	return		;funcret
   967  007BEE                     __end_of_secuencial_Efecto1:
   968                           	callstack 0
   969                           
   970 ;; *************** function _retardo_velocidad *****************
   971 ;; Defined at:
   972 ;;		line 139 in file "secuencia_main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   986 ;;      Params:         0       0       0       0       0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0
   988 ;;      Temps:          2       0       0       0       0       0       0       0       0
   989 ;;      Totals:         2       0       0       0       0       0       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_secuencial_Efecto1
   996 ;;		_secuencial_Efecto2
   997 ;;		_secuencial_Efecto3
   998 ;;		_secuencial_Efecto4
   999 ;;		_secuencial_Efecto5
  1000 ;;		_secuencial_Efecto6
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text7
  1005  007F3A                     __ptext7:
  1006                           	callstack 0
  1007  007F3A                     _retardo_velocidad:
  1008                           	callstack 29
  1009  007F3A                     
  1010                           ;secuencia_main.c: 140:     if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0
      +                          )));}
  1011  007F3A  040F               	decf	_velocidad^0,w,c
  1012  007F3C  1010               	iorwf	(_velocidad+1)^0,w,c
  1013  007F3E  1011               	iorwf	(_velocidad+2)^0,w,c
  1014  007F40  1012               	iorwf	(_velocidad+3)^0,w,c
  1015  007F42  A4D8               	btfss	status,2,c
  1016  007F44  EFA6  F03F         	goto	u11
  1017  007F48  EFA8  F03F         	goto	u10
  1018  007F4C                     u11:
  1019  007F4C  EFB1  F03F         	goto	l781
  1020  007F50                     u10:
  1021  007F50  0E82               	movlw	130
  1022  007F52  6E01               	movwf	??_retardo_velocidad^0,c
  1023  007F54  0EDE               	movlw	222
  1024  007F56                     u537:
  1025  007F56  2EE8               	decfsz	wreg,f,c
  1026  007F58  D7FE               	bra	u537
  1027  007F5A  2E01               	decfsz	??_retardo_velocidad^0,f,c
  1028  007F5C  D7FC               	bra	u537
  1029  007F5E  EFFF  F03F         	goto	l101
  1030  007F62                     l781:
  1031  007F62  0E02               	movlw	2
  1032  007F64  180F               	xorwf	_velocidad^0,w,c
  1033  007F66  1010               	iorwf	(_velocidad+1)^0,w,c
  1034  007F68  1011               	iorwf	(_velocidad+2)^0,w,c
  1035  007F6A  1012               	iorwf	(_velocidad+3)^0,w,c
  1036  007F6C  A4D8               	btfss	status,2,c
  1037  007F6E  EFBB  F03F         	goto	u21
  1038  007F72  EFBD  F03F         	goto	u20
  1039  007F76                     u21:
  1040  007F76  EFCB  F03F         	goto	l785
  1041  007F7A                     u20:
  1042  007F7A  0E02               	movlw	2
  1043  007F7C  6E02               	movwf	(??_retardo_velocidad+1)^0,c
  1044  007F7E  0E04               	movlw	4
  1045  007F80  6E01               	movwf	??_retardo_velocidad^0,c
  1046  007F82  0EBA               	movlw	186
  1047  007F84                     u547:
  1048  007F84  2EE8               	decfsz	wreg,f,c
  1049  007F86  D7FE               	bra	u547
  1050  007F88  2E01               	decfsz	??_retardo_velocidad^0,f,c
  1051  007F8A  D7FC               	bra	u547
  1052  007F8C  2E02               	decfsz	(??_retardo_velocidad+1)^0,f,c
  1053  007F8E  D7FA               	bra	u547
  1054  007F90  D000               	nop2	
  1055  007F92  EFFF  F03F         	goto	l101
  1056  007F96                     l785:
  1057  007F96  0E03               	movlw	3
  1058  007F98  180F               	xorwf	_velocidad^0,w,c
  1059  007F9A  1010               	iorwf	(_velocidad+1)^0,w,c
  1060  007F9C  1011               	iorwf	(_velocidad+2)^0,w,c
  1061  007F9E  1012               	iorwf	(_velocidad+3)^0,w,c
  1062  007FA0  A4D8               	btfss	status,2,c
  1063  007FA2  EFD5  F03F         	goto	u31
  1064  007FA6  EFD7  F03F         	goto	u30
  1065  007FAA                     u31:
  1066  007FAA  EFE5  F03F         	goto	l789
  1067  007FAE                     u30:
  1068  007FAE  0E03               	movlw	3
  1069  007FB0  6E02               	movwf	(??_retardo_velocidad+1)^0,c
  1070  007FB2  0E08               	movlw	8
  1071  007FB4  6E01               	movwf	??_retardo_velocidad^0,c
  1072  007FB6  0E77               	movlw	119
  1073  007FB8                     u557:
  1074  007FB8  2EE8               	decfsz	wreg,f,c
  1075  007FBA  D7FE               	bra	u557
  1076  007FBC  2E01               	decfsz	??_retardo_velocidad^0,f,c
  1077  007FBE  D7FC               	bra	u557
  1078  007FC0  2E02               	decfsz	(??_retardo_velocidad+1)^0,f,c
  1079  007FC2  D7FA               	bra	u557
  1080  007FC4  F000               	nop	
  1081  007FC6  EFFF  F03F         	goto	l101
  1082  007FCA                     l789:
  1083  007FCA  0E04               	movlw	4
  1084  007FCC  180F               	xorwf	_velocidad^0,w,c
  1085  007FCE  1010               	iorwf	(_velocidad+1)^0,w,c
  1086  007FD0  1011               	iorwf	(_velocidad+2)^0,w,c
  1087  007FD2  1012               	iorwf	(_velocidad+3)^0,w,c
  1088  007FD4  A4D8               	btfss	status,2,c
  1089  007FD6  EFEF  F03F         	goto	u41
  1090  007FDA  EFF1  F03F         	goto	u40
  1091  007FDE                     u41:
  1092  007FDE  EFFF  F03F         	goto	l97
  1093  007FE2                     u40:
  1094  007FE2  0E05               	movlw	5
  1095  007FE4  6E02               	movwf	(??_retardo_velocidad+1)^0,c
  1096  007FE6  0E0F               	movlw	15
  1097  007FE8  6E01               	movwf	??_retardo_velocidad^0,c
  1098  007FEA  0EF1               	movlw	241
  1099  007FEC                     u567:
  1100  007FEC  2EE8               	decfsz	wreg,f,c
  1101  007FEE  D7FE               	bra	u567
  1102  007FF0  2E01               	decfsz	??_retardo_velocidad^0,f,c
  1103  007FF2  D7FC               	bra	u567
  1104  007FF4  2E02               	decfsz	(??_retardo_velocidad+1)^0,f,c
  1105  007FF6  D7FA               	bra	u567
  1106  007FF8  F000               	nop	
  1107  007FFA  EFFF  F03F         	goto	l101
  1108  007FFE                     l97:
  1109  007FFE                     l101:
  1110  007FFE  0012               	return		;funcret
  1111  008000                     __end_of_retardo_velocidad:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _lectura *****************
  1115 ;; Defined at:
  1116 ;;		line 126 in file "secuencia_main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2    0[COMRAM] unsigned int 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        3 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_secuencial_Efecto1
  1140 ;;		_secuencial_Efecto2
  1141 ;;		_secuencial_Efecto3
  1142 ;;		_secuencial_Efecto4
  1143 ;;		_secuencial_Efecto5
  1144 ;;		_secuencial_Efecto6
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text8
  1149  007DE6                     __ptext8:
  1150                           	callstack 0
  1151  007DE6                     _lectura:
  1152                           	callstack 29
  1153  007DE6                     
  1154                           ;secuencia_main.c: 127:     if (!PORTBbits.RB7) {
  1155  007DE6  BE81               	btfsc	129,7,c	;volatile
  1156  007DE8  EFF8  F03E         	goto	u291
  1157  007DEC  EFFA  F03E         	goto	u290
  1158  007DF0                     u291:
  1159  007DF0  EF12  F03F         	goto	l87
  1160  007DF4                     u290:
  1161  007DF4                     
  1162                           ;secuencia_main.c: 128:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1163  007DF4  0E82               	movlw	130
  1164  007DF6  6E03               	movwf	??_lectura^0,c
  1165  007DF8  0EDE               	movlw	222
  1166  007DFA                     u577:
  1167  007DFA  2EE8               	decfsz	wreg,f,c
  1168  007DFC  D7FE               	bra	u577
  1169  007DFE  2E03               	decfsz	??_lectura^0,f,c
  1170  007E00  D7FC               	bra	u577
  1171  007E02                     
  1172                           ;secuencia_main.c: 129:         if(++efecto>6){efecto=1;}
  1173  007E02  2A13               	incf	_efecto^0,f,c
  1174  007E04  0E06               	movlw	6
  1175  007E06  6413               	cpfsgt	_efecto^0,c
  1176  007E08  EF08  F03F         	goto	u301
  1177  007E0C  EF0A  F03F         	goto	u300
  1178  007E10                     u301:
  1179  007E10  EF0C  F03F         	goto	l88
  1180  007E14                     u300:
  1181  007E14  0E01               	movlw	1
  1182  007E16  6E13               	movwf	_efecto^0,c
  1183  007E18                     l88:
  1184                           
  1185                           ;secuencia_main.c: 130:         return 1;
  1186  007E18  0E00               	movlw	0
  1187  007E1A  6E02               	movwf	(?_lectura+1)^0,c
  1188  007E1C  0E01               	movlw	1
  1189  007E1E  6E01               	movwf	?_lectura^0,c
  1190  007E20  EF3E  F03F         	goto	l89
  1191  007E24                     l87:
  1192                           
  1193                           ;secuencia_main.c: 132:     if (!PORTBbits.RB6) {
  1194  007E24  BC81               	btfsc	129,6,c	;volatile
  1195  007E26  EF17  F03F         	goto	u311
  1196  007E2A  EF19  F03F         	goto	u310
  1197  007E2E                     u311:
  1198  007E2E  EF3A  F03F         	goto	l90
  1199  007E32                     u310:
  1200  007E32                     
  1201                           ;secuencia_main.c: 133:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1202  007E32  0E82               	movlw	130
  1203  007E34  6E03               	movwf	??_lectura^0,c
  1204  007E36  0EDE               	movlw	222
  1205  007E38                     u587:
  1206  007E38  2EE8               	decfsz	wreg,f,c
  1207  007E3A  D7FE               	bra	u587
  1208  007E3C  2E03               	decfsz	??_lectura^0,f,c
  1209  007E3E  D7FC               	bra	u587
  1210  007E40                     
  1211                           ;secuencia_main.c: 134:         if(++velocidad==5){velocidad=1;}
  1212  007E40  0E01               	movlw	1
  1213  007E42  260F               	addwf	_velocidad^0,f,c
  1214  007E44  0E00               	movlw	0
  1215  007E46  2210               	addwfc	(_velocidad+1)^0,f,c
  1216  007E48  2211               	addwfc	(_velocidad+2)^0,f,c
  1217  007E4A  2212               	addwfc	(_velocidad+3)^0,f,c
  1218  007E4C  0E05               	movlw	5
  1219  007E4E  180F               	xorwf	_velocidad^0,w,c
  1220  007E50  1010               	iorwf	(_velocidad+1)^0,w,c
  1221  007E52  1011               	iorwf	(_velocidad+2)^0,w,c
  1222  007E54  1012               	iorwf	(_velocidad+3)^0,w,c
  1223  007E56  A4D8               	btfss	status,2,c
  1224  007E58  EF30  F03F         	goto	u321
  1225  007E5C  EF32  F03F         	goto	u320
  1226  007E60                     u321:
  1227  007E60  EF3A  F03F         	goto	l90
  1228  007E64                     u320:
  1229  007E64  0E01               	movlw	1
  1230  007E66  6E0F               	movwf	_velocidad^0,c
  1231  007E68  0E00               	movlw	0
  1232  007E6A  6E10               	movwf	(_velocidad+1)^0,c
  1233  007E6C  0E00               	movlw	0
  1234  007E6E  6E11               	movwf	(_velocidad+2)^0,c
  1235  007E70  0E00               	movlw	0
  1236  007E72  6E12               	movwf	(_velocidad+3)^0,c
  1237  007E74                     l90:
  1238                           
  1239                           ;secuencia_main.c: 136:     return 0;
  1240  007E74  0E00               	movlw	0
  1241  007E76  6E02               	movwf	(?_lectura+1)^0,c
  1242  007E78  0E00               	movlw	0
  1243  007E7A  6E01               	movwf	?_lectura^0,c
  1244  007E7C                     l89:
  1245  007E7C  0012               	return		;funcret
  1246  007E7E                     __end_of_lectura:
  1247                           	callstack 0
  1248  0000                     
  1249                           	psect	rparam
  1250  0000                     
  1251                           	psect	idloc
  1252                           
  1253                           ;Config register IDLOC0 @ 0x200000
  1254                           ;	unspecified, using default values
  1255  200000                     	org	2097152
  1256  200000  FF                 	db	255
  1257                           
  1258                           ;Config register IDLOC1 @ 0x200001
  1259                           ;	unspecified, using default values
  1260  200001                     	org	2097153
  1261  200001  FF                 	db	255
  1262                           
  1263                           ;Config register IDLOC2 @ 0x200002
  1264                           ;	unspecified, using default values
  1265  200002                     	org	2097154
  1266  200002  FF                 	db	255
  1267                           
  1268                           ;Config register IDLOC3 @ 0x200003
  1269                           ;	unspecified, using default values
  1270  200003                     	org	2097155
  1271  200003  FF                 	db	255
  1272                           
  1273                           ;Config register IDLOC4 @ 0x200004
  1274                           ;	unspecified, using default values
  1275  200004                     	org	2097156
  1276  200004  FF                 	db	255
  1277                           
  1278                           ;Config register IDLOC5 @ 0x200005
  1279                           ;	unspecified, using default values
  1280  200005                     	org	2097157
  1281  200005  FF                 	db	255
  1282                           
  1283                           ;Config register IDLOC6 @ 0x200006
  1284                           ;	unspecified, using default values
  1285  200006                     	org	2097158
  1286  200006  FF                 	db	255
  1287                           
  1288                           ;Config register IDLOC7 @ 0x200007
  1289                           ;	unspecified, using default values
  1290  200007                     	org	2097159
  1291  200007  FF                 	db	255
  1292                           
  1293                           	psect	config
  1294                           
  1295                           ;Config register CONFIG1L @ 0x300000
  1296                           ;	unspecified, using default values
  1297                           ;	PLL Prescaler Selection bits
  1298                           ;	PLLDIV = 0x0, unprogrammed default
  1299                           ;	System Clock Postscaler Selection bits
  1300                           ;	CPUDIV = 0x0, unprogrammed default
  1301                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1302                           ;	USBDIV = 0x0, unprogrammed default
  1303  300000                     	org	3145728
  1304  300000  00                 	db	0
  1305                           
  1306                           ;Config register CONFIG1H @ 0x300001
  1307                           ;	Oscillator Selection bits
  1308                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1309                           ;	Fail-Safe Clock Monitor Enable bit
  1310                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1311                           ;	Internal/External Oscillator Switchover bit
  1312                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1313  300001                     	org	3145729
  1314  300001  09                 	db	9
  1315                           
  1316                           ;Config register CONFIG2L @ 0x300002
  1317                           ;	Power-up Timer Enable bit
  1318                           ;	PWRT = OFF, PWRT disabled
  1319                           ;	Brown-out Reset Enable bits
  1320                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1321                           ;	Brown-out Reset Voltage bits
  1322                           ;	BORV = 3, Minimum setting 2.05V
  1323                           ;	USB Voltage Regulator Enable bit
  1324                           ;	VREGEN = OFF, USB voltage regulator disabled
  1325  300002                     	org	3145730
  1326  300002  1F                 	db	31
  1327                           
  1328                           ;Config register CONFIG2H @ 0x300003
  1329                           ;	Watchdog Timer Enable bit
  1330                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1331                           ;	Watchdog Timer Postscale Select bits
  1332                           ;	WDTPS = 32768, 1:32768
  1333  300003                     	org	3145731
  1334  300003  1E                 	db	30
  1335                           
  1336                           ; Padding undefined space
  1337  300004                     	org	3145732
  1338  300004  FF                 	db	255
  1339                           
  1340                           ;Config register CONFIG3H @ 0x300005
  1341                           ;	CCP2 MUX bit
  1342                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1343                           ;	PORTB A/D Enable bit
  1344                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1345                           ;	Low-Power Timer 1 Oscillator Enable bit
  1346                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1347                           ;	MCLR Pin Enable bit
  1348                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1349  300005                     	org	3145733
  1350  300005  81                 	db	129
  1351                           
  1352                           ;Config register CONFIG4L @ 0x300006
  1353                           ;	Stack Full/Underflow Reset Enable bit
  1354                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1355                           ;	Single-Supply ICSP Enable bit
  1356                           ;	LVP = OFF, Single-Supply ICSP disabled
  1357                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1358                           ;	ICPRT = OFF, ICPORT disabled
  1359                           ;	Extended Instruction Set Enable bit
  1360                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1361                           ;	Background Debugger Enable bit
  1362                           ;	DEBUG = 0x1, unprogrammed default
  1363  300006                     	org	3145734
  1364  300006  81                 	db	129
  1365                           
  1366                           ; Padding undefined space
  1367  300007                     	org	3145735
  1368  300007  FF                 	db	255
  1369                           
  1370                           ;Config register CONFIG5L @ 0x300008
  1371                           ;	Code Protection bit
  1372                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1373                           ;	Code Protection bit
  1374                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1375                           ;	Code Protection bit
  1376                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1377                           ;	Code Protection bit
  1378                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1379  300008                     	org	3145736
  1380  300008  0F                 	db	15
  1381                           
  1382                           ;Config register CONFIG5H @ 0x300009
  1383                           ;	Boot Block Code Protection bit
  1384                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1385                           ;	Data EEPROM Code Protection bit
  1386                           ;	CPD = OFF, Data EEPROM is not code-protected
  1387  300009                     	org	3145737
  1388  300009  C0                 	db	192
  1389                           
  1390                           ;Config register CONFIG6L @ 0x30000A
  1391                           ;	Write Protection bit
  1392                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1393                           ;	Write Protection bit
  1394                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1395                           ;	Write Protection bit
  1396                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1397                           ;	Write Protection bit
  1398                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1399  30000A                     	org	3145738
  1400  30000A  0F                 	db	15
  1401                           
  1402                           ;Config register CONFIG6H @ 0x30000B
  1403                           ;	Configuration Register Write Protection bit
  1404                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1405                           ;	Boot Block Write Protection bit
  1406                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1407                           ;	Data EEPROM Write Protection bit
  1408                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1409  30000B                     	org	3145739
  1410  30000B  E0                 	db	224
  1411                           
  1412                           ;Config register CONFIG7L @ 0x30000C
  1413                           ;	Table Read Protection bit
  1414                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1415                           ;	Table Read Protection bit
  1416                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1417                           ;	Table Read Protection bit
  1418                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1419                           ;	Table Read Protection bit
  1420                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1421  30000C                     	org	3145740
  1422  30000C  0F                 	db	15
  1423                           
  1424                           ;Config register CONFIG7H @ 0x30000D
  1425                           ;	Boot Block Table Read Protection bit
  1426                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1427  30000D                     	org	3145741
  1428  30000D  40                 	db	64
  1429                           tosu	equ	0xFFF
  1430                           tosh	equ	0xFFE
  1431                           tosl	equ	0xFFD
  1432                           stkptr	equ	0xFFC
  1433                           pclatu	equ	0xFFB
  1434                           pclath	equ	0xFFA
  1435                           pcl	equ	0xFF9
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           prodh	equ	0xFF4
  1441                           prodl	equ	0xFF3
  1442                           indf0	equ	0xFEF
  1443                           postinc0	equ	0xFEE
  1444                           postdec0	equ	0xFED
  1445                           preinc0	equ	0xFEC
  1446                           plusw0	equ	0xFEB
  1447                           fsr0h	equ	0xFEA
  1448                           fsr0l	equ	0xFE9
  1449                           wreg	equ	0xFE8
  1450                           indf1	equ	0xFE7
  1451                           postinc1	equ	0xFE6
  1452                           postdec1	equ	0xFE5
  1453                           preinc1	equ	0xFE4
  1454                           plusw1	equ	0xFE3
  1455                           fsr1h	equ	0xFE2
  1456                           fsr1l	equ	0xFE1
  1457                           bsr	equ	0xFE0
  1458                           indf2	equ	0xFDF
  1459                           postinc2	equ	0xFDE
  1460                           postdec2	equ	0xFDD
  1461                           preinc2	equ	0xFDC
  1462                           plusw2	equ	0xFDB
  1463                           fsr2h	equ	0xFDA
  1464                           fsr2l	equ	0xFD9
  1465                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_secuencial_Efecto4
    _secuencial_Efecto6->_lectura
    _secuencial_Efecto5->_lectura
    _secuencial_Efecto4->_lectura
    _secuencial_Efecto3->_lectura
    _secuencial_Efecto2->_lectura
    _secuencial_Efecto1->_lectura

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     502
                                             12 COMRAM     2     2      0
                 _secuencial_Efecto1
                 _secuencial_Efecto2
                 _secuencial_Efecto3
                 _secuencial_Efecto4
                 _secuencial_Efecto5
                 _secuencial_Efecto6
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto6                                   4     4      0      68
                                              3 COMRAM     4     4      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto5                                   4     4      0      68
                                              3 COMRAM     4     4      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto4                                   9     9      0     138
                                              3 COMRAM     9     9      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto3                                   4     4      0      68
                                              3 COMRAM     4     4      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto2                                   8     8      0      92
                                              3 COMRAM     8     8      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto1                                   4     4      0      68
                                              3 COMRAM     4     4      0
                            _lectura
                  _retardo_velocidad
 ---------------------------------------------------------------------------------
 (2) _retardo_velocidad                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lectura                                              3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _secuencial_Efecto1
     _lectura
     _retardo_velocidad
   _secuencial_Efecto2
     _lectura
     _retardo_velocidad
   _secuencial_Efecto3
     _lectura
     _retardo_velocidad
   _secuencial_Efecto4
     _lectura
     _retardo_velocidad
   _secuencial_Efecto5
     _lectura
     _retardo_velocidad
   _secuencial_Efecto6
     _lectura
     _retardo_velocidad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      20        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Nov 17 14:21:25 2020

                         l60 7DE4                           l54 7BEC                           l72 7F38  
                         l90 7E74                           l66 7C58                           l84 7CC4  
                         l78 7B80                           l87 7E24                           l88 7E18  
                         l89 7E7C                           l97 7FFE                           u10 7F50  
                         u11 7F4C                           u20 7F7A                           u21 7F76  
                         u30 7FAE                           u31 7FAA                           u40 7FE2  
                         u41 7FDE                          l101 7FFE                          l781 7F62  
                        l951 7DE6                          l791 7FE2                          l783 7F7A  
                        l961 7E32                          l953 7DF4                          l785 7F96  
                        l777 7F3A                          l963 7E40                          l955 7E02  
                        l787 7FAE                          l779 7F50                          l971 7B8A  
                        l965 7E64                          l957 7E14                          l789 7FCA  
                        l983 7BE4                          l975 7BAA                          l977 7BC6  
                        l969 7B82                          l993 7D82                          l979 7BCA  
                        l995 7DB8                          l987 7D52                          l997 7DBC  
                        l989 7D62                          u300 7E14                          u301 7E10  
                        u310 7E32                          u311 7E2E                          u320 7E64  
                        u400 7C12                          u321 7E60                          u401 7C0E  
                        u330 7BA6                          u331 7BA2                          u420 7C4C  
                        u500 7C7E                          u421 7C48                          u501 7C7A  
                        u350 7BE0                          u414 7C28                          u351 7BDC  
                        u415 7C24                          u344 7BBC                          u360 7D7E  
                        u520 7CB8                          u345 7BB8                          u361 7D7A  
                        u521 7CB4                          u290 7DF4                          u450 7F14  
                        u434 7EB4                          u514 7C94                          u291 7DF0  
                        u451 7F10                          u435 7EAE                          u515 7C90  
                        u460 7F38                          u444 7EE4                          u461 7F34  
                        u445 7EDE                          u390 7DD2                          u374 7D94  
                        u470 7B38                          u391 7DCE                          u375 7D90  
                        u471 7B34                          u384 7DAC                          u537 7F56  
                        u385 7DA8                          u490 7B72                          u547 7F84  
                        u491 7B6E                          u484 7B4E                          u557 7FB8  
                        u485 7B4A                          u567 7FEC                          u577 7DFA  
                        u587 7E38                          wreg 000FE8                         l1001 7DD6  
                       l1011 7C16                         l1013 7C32                         l1005 7BEE  
                       l1015 7C36                         l1007 7BF6                         l1031 7EFA  
                       l1023 7E7E                         l1033 7EFE                         l1041 7B22  
                       l1019 7C50                         l1051 7B5C                         l1043 7B2A  
                       l1037 7F18                         l1029 7E96                         l1061 7C62  
                       l1109 7D18                         l1039 7F1C                         l1055 7B76  
                       l1047 7B3C                         l1049 7B58                         l1073 7CBC  
                       l1065 7C82                         l1081 7CD0                         l1067 7C9E  
                       l1059 7C5A                         l1091 7CF0                         l1083 7CD2  
                       l1069 7CA2                         l1093 7CF8                         l1085 7CD8  
                       l1077 7CC6                         l1095 7D00                         l1087 7CE0  
                       l1079 7CCE                         l1089 7CE8                         l1099 7D04  
                       _LATD 000F8C                         _main 7CC6                         fsr1l 000FE1  
                       start 0000                 ___param_bank 000000                        ?_main 0001  
                      _TRISD 000F95              __end_of_lectura 7E7E                        tablat 000FF5  
                      status 000FD8              __initialization 7AF8                 __end_of_main 7D52  
                     ??_main 000D                __activetblptr 000002                       _efecto 0013  
 __end_of_secuencial_Efecto1 7BEE   __end_of_secuencial_Efecto2 7DE6   __end_of_secuencial_Efecto3 7C5A  
 __end_of_secuencial_Efecto4 7F3A   __end_of_secuencial_Efecto5 7B82   __end_of_secuencial_Efecto6 7CC6  
                  ??_lectura 0003                 __pdataCOMRAM 000F                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 7B18                ___rparam_used 000001               __pcstackCOMRAM 0001  
        secuencial_Efecto1@i 0006          secuencial_Efecto2@i 000A          secuencial_Efecto2@j 0008  
        secuencial_Efecto3@i 0006          secuencial_Efecto4@i 0007          secuencial_Efecto4@m 0009  
        secuencial_Efecto5@i 0006          secuencial_Efecto4@n 000B          secuencial_Efecto6@i 0006  
          _retardo_velocidad 7F3A           ?_retardo_velocidad 0001          ??_retardo_velocidad 0001  
  __end_of_retardo_velocidad 8000                      __Hparam 0000                      __Lparam 0000  
                    __pcinit 7AF8                      __ramtop 0800                      __ptext0 7CC6  
                    __ptext1 7C5A                      __ptext2 7B22                      __ptext3 7E7E  
                    __ptext4 7BEE                      __ptext5 7D52                      __ptext6 7B82  
                    __ptext7 7F3A                      __ptext8 7DE6                      _lectura 7DE6  
       end_of_initialization 7B18                __Lmediumconst 0000                      postdec1 000FE5  
                    postinc0 000FEE                    _PORTBbits 000F81                    _TRISBbits 000F93  
         _secuencial_Efecto1 7B82           _secuencial_Efecto2 7D52           _secuencial_Efecto3 7BEE  
         _secuencial_Efecto4 7E7E           _secuencial_Efecto5 7B22           _secuencial_Efecto6 7C5A  
        ?_secuencial_Efecto1 0001          ?_secuencial_Efecto2 0001          ?_secuencial_Efecto3 0001  
        ?_secuencial_Efecto4 0001          ?_secuencial_Efecto5 0001          ?_secuencial_Efecto6 0001  
 __size_of_retardo_velocidad 00C6                __pidataCOMRAM 7AF3         ??_secuencial_Efecto1 0004  
       ??_secuencial_Efecto2 0004         ??_secuencial_Efecto3 0004         ??_secuencial_Efecto4 0004  
       ??_secuencial_Efecto5 0004         ??_secuencial_Efecto6 0004          start_initialization 7AF8  
                   ?_lectura 0001                    _velocidad 000F                  _INTCON2bits 000FF1  
                  copy_data0 7B0C                     __Hrparam 0000                     __Lrparam 0000  
           __size_of_lectura 0098                __size_of_main 008C  __size_of_secuencial_Efecto1 006C  
__size_of_secuencial_Efecto2 0094  __size_of_secuencial_Efecto3 006C  __size_of_secuencial_Efecto4 00BC  
__size_of_secuencial_Efecto5 0060  __size_of_secuencial_Efecto6 006C  
